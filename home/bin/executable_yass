#!/usr/bin/env bash

set -euo pipefail

TITLE=$(cat <<- EOF
	██╗   ██╗ █████╗ ███████╗███████╗
	╚██╗ ██╔╝██╔══██╗██╔════╝██╔════╝
	 ╚████╔╝ ███████║███████╗███████╗
	  ╚██╔╝  ██╔══██║╚════██║╚════██║
	   ██║   ██║  ██║███████║███████║
	   ╚═╝   ╚═╝  ╚═╝╚══════╝╚══════╝
EOF
)

# If there's no lolcat command, pass through.
# 	Note: This is mildly cute. It's easy to duplicate the command in an 
#	`if`, one piped and the other not, but it's definitely not DRY. Can't
# 	use aliases in a script unless you want _all_ of them and potential
#	side effects. Piping to a shell function is allowed, though...
if ! command -v lolcat &> /dev/null
then	
	function lolcat() { cat - ; }
fi

echo -e "\n${TITLE}" | lolcat


# You'll need a nerdfont for this to look ok
# FILLERCHAR="󰥛" # nice, but doesn't easily play well with column calcs

# No nerdfont needed. :/ 
FILLERCHAR="~"

# Forbidden by bash. Ho hum. We'll use a while loop instead.
#     printf -v FILLER '󰥛%.0s' {1..$COLUMNS}

FILLER=""
COLUMNS=$(tput cols)
TEMP=COLUMNS
while ((TEMP--))
do
	FILLER="${FILLER}${FILLERCHAR}"
done

header_line () {
	#echo -e "\n\n"
	printf "\n\n%.${COLUMNS}s\n\n" "${1} ${FILLER}"
}

header_line "Brew update"
brew update

header_line "Brew upgrade"
brew upgrade

header_line "Brew autoremove"
brew autoremove

header_line "Brew cleanup"
brew cleanup

header_line "Brewfile save"
#brew bundle dump --file=- | grep -v '^vscode' > "${CHEZMOI_DIR}/Brewfile"
brew bundle dump --global --force --formula --cask --tap --mas --whalebrew --describe
chezmoi add ~/.Brewfile

header_line "Chezmoi update"
chezmoi git pull
chezmoi apply

header_line "Brewfile update"
brew bundle --global install --quiet --no-upgrade --no-lock | grep -v '^Using '

header_line "Brewfile cleanup"
brew bundle --global cleanup --verbose 

if command -v mas &> /dev/null
then
	header_line "App Store update"
	mas upgrade 2>&1  #| sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | grep -v '^Warning: Nothing found to upgrade'
fi

if [ -x "${ZSH}/tools/upgrade.sh" ]
then
	header_line "Oh My ZSH update"
	# https://github.com/ohmyzsh/ohmyzsh/wiki/FAQ#how-do-i-manually-update-oh-my-zsh-from-a-script
	"${ZSH}/tools/upgrade.sh" -v silent
fi


header_line "Brew doctor"

# Ignore the following audit checks: check_for_non_prefixed_coreutils, 
# check_for_non_prefixed_findutils. The CLI ain't all that great at
# facilitating this.
brew doctor --list-checks | grep -v '^check_for_non_prefixed_coreutils$' | grep -v '^check_for_non_prefixed_findutils$' | xargs brew doctor --quiet || true

header_line "Chezmoi doctor"
chezmoi doctor | grep -v "^[info|ok]"

header_line "Chezmoi status"
chezmoi status

header_line "Chezmoi git status"
chezmoi git status

header_line "System update"
softwareupdate --list
# nohup softwareupdate --download --all >/dev/null 2>&1 &

